name: Deploy E-Commerce Platform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18.x'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user-service, order-service, payment-service, inventory-service]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: |
        cd services/${{ matrix.service }}
        npm ci

    - name: Run tests
      run: |
        cd services/${{ matrix.service }}
        npm test -- --coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./services/${{ matrix.service }}/coverage/lcov.info

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Serverless Framework
      run: npm install -g serverless

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy Infrastructure
      run: |
        cd infrastructure
        terraform init
        terraform apply -auto-approve

    - name: Deploy Services
      run: |
        for service in user-service order-service payment-service inventory-service; do
          cd services/$service
          npm ci
          sls deploy --stage production --region ${{ env.AWS_REGION }}
          cd ../..
        done

    - name: Run Integration Tests
      run: |
        npm ci
        npm run test:integration